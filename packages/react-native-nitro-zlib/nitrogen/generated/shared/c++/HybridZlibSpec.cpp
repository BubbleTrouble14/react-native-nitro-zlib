///
/// HybridZlibSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "HybridZlibSpec.hpp"

namespace margelo::nitro::rnzlib {

  void HybridZlibSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("version", &HybridZlibSpec::getVersion);
      prototype.registerHybridMethod("inflateSync", &HybridZlibSpec::inflateSync);
      prototype.registerHybridMethod("inflateRawSync", &HybridZlibSpec::inflateRawSync);
      prototype.registerHybridMethod("compressSync", &HybridZlibSpec::compressSync);
      prototype.registerHybridMethod("deflateSync", &HybridZlibSpec::deflateSync);
      prototype.registerHybridMethod("deflateRawSync", &HybridZlibSpec::deflateRawSync);
      prototype.registerHybridMethod("gzipSync", &HybridZlibSpec::gzipSync);
      prototype.registerHybridMethod("gunzipSync", &HybridZlibSpec::gunzipSync);
      prototype.registerHybridMethod("inflate", &HybridZlibSpec::inflate);
      prototype.registerHybridMethod("inflateRaw", &HybridZlibSpec::inflateRaw);
      prototype.registerHybridMethod("compress", &HybridZlibSpec::compress);
      prototype.registerHybridMethod("deflate", &HybridZlibSpec::deflate);
      prototype.registerHybridMethod("deflateRaw", &HybridZlibSpec::deflateRaw);
      prototype.registerHybridMethod("gzip", &HybridZlibSpec::gzip);
      prototype.registerHybridMethod("gunzip", &HybridZlibSpec::gunzip);
      prototype.registerHybridMethod("createDeflateStream", &HybridZlibSpec::createDeflateStream);
      prototype.registerHybridMethod("createInflateStream", &HybridZlibSpec::createInflateStream);
      prototype.registerHybridMethod("createGzipStream", &HybridZlibSpec::createGzipStream);
      prototype.registerHybridMethod("createGunzipStream", &HybridZlibSpec::createGunzipStream);
      prototype.registerHybridMethod("createDeflateRawStream", &HybridZlibSpec::createDeflateRawStream);
      prototype.registerHybridMethod("createInflateRawStream", &HybridZlibSpec::createInflateRawStream);
      prototype.registerHybridMethod("createUnzipStream", &HybridZlibSpec::createUnzipStream);
    });
  }

} // namespace margelo::nitro::rnzlib
